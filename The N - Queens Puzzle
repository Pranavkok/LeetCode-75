#include <bits/stdc++.h> 

void addans(vector<vector<int>>&board,vector<vector<int>>&ans,int n){
	vector<int>temp;
	for(int i=0 ;i<n ;i++){
		for(int j=0 ;j<n ;j++){
			temp.push_back(board[i][j]);
		}
	}
	ans.push_back(temp);
}

bool isSafe(int r, int c, vector<vector<int>>&ans , vector<vector<int>>&board , int n){
	//row check
	int x = r ;
	int y = c ;
	while(y >= 0){
		if(board[x][y] == 1){
			return false ;
		}
		y-- ;
	}
	//upper diagonal check
	 x = r ;
	 y = c ;
	while(x >= 0 && y >= 0){
		if(board[x][y] == 1){
			return false ;
		}
		x-- ;
		y-- ;
	}
	//lower diagonal check
	 x = r ;
	 y = c ;
	while(x < n && y >= 0){
		if(board[x][y] == 1){
			return false ;
		}
		x++ ;
		y-- ;
	}
	return true ;
}

void solve(int col,vector<vector<int>> &ans,vector<vector<int>> board,int n){
	//base case
	if(col == n){
		addans(board,ans,n);
		return ;
	}
	for(int row=0 ; row<n ; row++){
		if(isSafe(row,col,ans,board,n)){
			board[row][col] = 1 ;
			solve(col+1,ans,board,n);
			board[row][col] = 0 ;
		}
	}
}

vector<vector<int>> nQueens(int n)
{
	vector<vector<int>>board(n,vector<int>(n,0));
	vector<vector<int>>ans ;
	solve(0,ans,board,n);
	return ans ;
}
