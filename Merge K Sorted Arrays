#include <bits/stdc++.h> 

class node{
    public:
    int data ;
    int i ;
    int j ;
    node(int data,int row,int col){
        this->data = data ;
        i = row ;
        j = col ;
    }
};

class compare{
    public:
    bool operator()(node* a , node* b){
        return a->data > b->data ;
    }
};

vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
    priority_queue<node* ,vector<node*>,compare>miniHeap ;

    //step 1 : saare array ke 1st element insert
    for (int i = 0; i < k; i++) {
        node *temp = new node(kArrays[i][0], i, 0);
        miniHeap.push(temp);
    }

    vector<int> ans;

    // step 2
    while (miniHeap.size() > 0)
    {
        node* temp = miniHeap.top();
        ans.push_back(temp->data);
        miniHeap.pop();
        int i = temp->i ;
        int j = temp->j ;

        if(j+1 < kArrays[i].size()){
            node* next = new node(kArrays[i][j+1],i,j+1);
            miniHeap.push(next);
        }
    }
    return ans ;
}
